version: '3.8'

# Multi-Project MCP Configuration - Security Hardened Version
# This file creates isolated containers for each project using environment variables
# PROJECT_NUM, PROJECT_ID, and PROJECT_PATH are set by mcp-multi.sh

services:
  # Serena MCP Server - Enhanced IDE assistance and project management
  serena:
    build:
      context: ./docker/mcp-servers/serena
      dockerfile: Dockerfile
    container_name: mcp-serena-${PROJECT_ID}
    environment:
      - MCP_SERVER_NAME=serena
      - PROJECT_PATH=${PROJECT_PATH}
      - PROJECT_ID=${PROJECT_ID}
      - PROJECT_NUM=${PROJECT_NUM}
      - CONTEXT=ide-assistant
    volumes:
      - ${PROJECT_PATH}:/workspace:ro
      - mcp-serena-data-${PROJECT_ID}:/app/data
    networks:
      - mcp-network-${PROJECT_ID}
    restart: unless-stopped
    # Security hardening
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/tmp:noexec,nosuid,size=50m
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "${SERENA_PORT}:8080"

  # Context7 MCP Server - Advanced context management and retrieval
  context7:
    build:
      context: ./docker/mcp-servers/context7
      dockerfile: Dockerfile
    container_name: mcp-context7-${PROJECT_ID}
    environment:
      - MCP_SERVER_NAME=context7
      - PROJECT_ID=${PROJECT_ID}
      - PROJECT_NUM=${PROJECT_NUM}
      # Use secrets for sensitive data
      - UPSTASH_REDIS_REST_URL_FILE=/run/secrets/upstash_url
      - UPSTASH_REDIS_REST_TOKEN_FILE=/run/secrets/upstash_token
    volumes:
      - mcp-context7-data-${PROJECT_ID}:/app/data
      - ${PROJECT_PATH}/.simone:/workspace/.simone:ro
    networks:
      - mcp-network-${PROJECT_ID}
    restart: unless-stopped
    # Security hardening
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/tmp:noexec,nosuid,size=50m
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    secrets:
      - upstash_url
      - upstash_token
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "${CONTEXT7_PORT}:8081"

  # Playwright MCP Server - Browser automation (Security Enhanced)
  playwright:
    build:
      context: ./docker/mcp-servers/playwright
      dockerfile: Dockerfile.secure
    container_name: mcp-playwright-${PROJECT_ID}
    environment:
      - MCP_SERVER_NAME=playwright
      - PROJECT_ID=${PROJECT_ID}
      - PROJECT_NUM=${PROJECT_NUM}
      - DISPLAY=:99
      - PLAYWRIGHT_HEADLESS=true
      - PLAYWRIGHT_SANDBOX_MODE=true
    volumes:
      - mcp-playwright-data-${PROJECT_ID}:/app/data
      - ${PROJECT_PATH}:/workspace:ro
    networks:
      - mcp-network-${PROJECT_ID}
    restart: unless-stopped
    # Enhanced security for browser automation
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=500m
      - /app/tmp:noexec,nosuid,size=200m
      - /dev/shm:noexec,nosuid,size=1g
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
      - seccomp:chrome
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - SYS_CHROOT  # Minimal capability for browser sandboxing
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    # Remove dangerous capabilities - use alternative approach
    # Instead of SYS_ADMIN and unconfined seccomp, use:
    # - Custom seccomp profile for Chrome
    # - Proper user namespace mapping
    # - Limited tmpfs for browser needs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    ports:
      - "${PLAYWRIGHT_PORT}:8082"

  # Work History MCP Server - Command tracking and output logging
  work-history:
    build:
      context: ./docker/mcp-servers/work-history
      dockerfile: Dockerfile
    container_name: mcp-work-history-${PROJECT_ID}
    environment:
      - MCP_SERVER_NAME=work-history
      - PROJECT_ID=${PROJECT_ID}
      - PROJECT_NUM=${PROJECT_NUM}
      - HISTORY_RETENTION_DAYS=${HISTORY_RETENTION_DAYS:-30}
    volumes:
      - mcp-work-history-data-${PROJECT_ID}:/app/data
      - ${PROJECT_PATH}/.simone/logs:/workspace/logs:ro
    networks:
      - mcp-network-${PROJECT_ID}
    restart: unless-stopped
    # Security hardening
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/tmp:noexec,nosuid,size=50m
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "${WORK_HISTORY_PORT}:8083"

  # Sequential Thinking MCP Server - Enhanced reasoning and problem-solving
  sequential-thinking:
    build:
      context: ./docker/mcp-servers/sequential-thinking
      dockerfile: Dockerfile
    container_name: mcp-sequential-thinking-${PROJECT_ID}
    environment:
      - MCP_SERVER_NAME=sequential-thinking
      - PROJECT_ID=${PROJECT_ID}
      - PROJECT_NUM=${PROJECT_NUM}
      - THINKING_MODE=${THINKING_MODE:-structured}
    volumes:
      - mcp-sequential-thinking-data-${PROJECT_ID}:/app/data
    networks:
      - mcp-network-${PROJECT_ID}
    restart: unless-stopped
    # Security hardening
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/tmp:noexec,nosuid,size=50m
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    ports:
      - "${SEQUENTIAL_THINKING_PORT}:8084"

  # MCP Gateway - Central proxy and load balancer for this project
  mcp-gateway:
    build:
      context: ./docker/mcp-gateway
      dockerfile: Dockerfile
    container_name: mcp-gateway-${PROJECT_ID}
    environment:
      - GATEWAY_PORT=9000
      - PROJECT_ID=${PROJECT_ID}
      - PROJECT_NUM=${PROJECT_NUM}
      - PROJECT_PATH=${PROJECT_PATH}
      - SERENA_URL=http://serena:8080
      - CONTEXT7_URL=http://context7:8081
      - PLAYWRIGHT_URL=http://playwright:8082
      - WORK_HISTORY_URL=http://work-history:8083
      - SEQUENTIAL_THINKING_URL=http://sequential-thinking:8084
      # Security settings
      - GATEWAY_RATE_LIMIT=${GATEWAY_RATE_LIMIT:-100}
      - GATEWAY_TIMEOUT=${GATEWAY_TIMEOUT:-30}
    ports:
      - "${GATEWAY_PORT}:9000"
    networks:
      - mcp-network-${PROJECT_ID}
    depends_on:
      serena:
        condition: service_healthy
      context7:
        condition: service_healthy
      playwright:
        condition: service_healthy
      work-history:
        condition: service_healthy
      sequential-thinking:
        condition: service_healthy
    restart: unless-stopped
    # Security hardening
    read_only: true
    user: "1000:1000"
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /app/tmp:noexec,nosuid,size=50m
    security_opt:
      - no-new-privileges:true
      - apparmor:docker-default
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  mcp-network-${PROJECT_ID}:
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET}
    # Network security
    driver_opts:
      com.docker.network.bridge.enable_icc: "false"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: "1500"
    labels:
      - "project=mcp-simone"
      - "security.level=isolated"

volumes:
  mcp-serena-data-${PROJECT_ID}:
    driver: local
    labels:
      - "project=mcp-simone"
      - "service=serena"
      - "security.encrypted=false"
  mcp-context7-data-${PROJECT_ID}:
    driver: local
    labels:
      - "project=mcp-simone"
      - "service=context7"
      - "security.encrypted=false"
  mcp-playwright-data-${PROJECT_ID}:
    driver: local
    labels:
      - "project=mcp-simone"
      - "service=playwright"
      - "security.encrypted=false"
  mcp-work-history-data-${PROJECT_ID}:
    driver: local
    labels:
      - "project=mcp-simone"
      - "service=work-history"
      - "security.encrypted=false"
  mcp-sequential-thinking-data-${PROJECT_ID}:
    driver: local
    labels:
      - "project=mcp-simone"
      - "service=sequential-thinking"
      - "security.encrypted=false"

# Secrets management (for production use)
secrets:
  upstash_url:
    external: true
  upstash_token:
    external: true

# Security-focused configuration additions:
x-security-defaults: &security-defaults
  read_only: true
  user: "1000:1000"
  security_opt:
    - no-new-privileges:true
    - apparmor:docker-default
  cap_drop:
    - ALL
  cap_add:
    - NET_BIND_SERVICE
  tmpfs:
    - /tmp:noexec,nosuid,size=100m